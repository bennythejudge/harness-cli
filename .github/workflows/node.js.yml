# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    #tags:
    #- 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm run build
    #- name: Upload a Build Artifact
    #  uses: actions/upload-artifact@v2.1.3
    #  with:
    #    name: harness-automation-linux-x64
    #    path: dist/linux/harness-automation
    #- name: Upload a Build Artifact
    #  uses: actions/upload-artifact@v2.1.3
    #  with:
    #    name: harness-automation-macos-x64
    #    path: dist/macos/harness-automation
    #- name: Upload a Build Artifact
    #  uses: actions/upload-artifact@v2.1.3
    #  with:
    #    name: harness-automation-windows-x64
    #    path: dist/windows/harness-automation.exe
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: dist/linux/harness-automation
        asset_name: harness-automation-linux-x64
        asset_content_type: application/binary
